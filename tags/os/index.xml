<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Os on İlker Korkut</title><link>https://www.ilkerkorkut.com/tags/os/</link><description>Recent content in Os on İlker Korkut</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright/><lastBuildDate>Sat, 06 Apr 2024 02:12:52 +0300</lastBuildDate><atom:link href="https://www.ilkerkorkut.com/tags/os/index.xml" rel="self" type="application/rss+xml"/><item><title>Efficiently Finding PIDs by Binary Name in Linux Using Go</title><link>https://www.ilkerkorkut.com/posts/golang-find-pid-with-name/</link><pubDate>Wed, 06 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.ilkerkorkut.com/posts/golang-find-pid-with-name/</guid><description>For many system functions, managing processes and finding their Process IDs (PIDs) is essential. However, it can occasionally be difficult to retrieve PIDs based on the binary name, particularly if the names are lengthy or are not presented correctly when using tools like (process status) ps. We will now examine a Go function that effectively locates Linux OS process IDs using their binary names.
Issue: Finding Processes Using Binary Names It is necessary to be able to identify individual processes using their binary names while working with a heterogeneous group of processes on a Linux system.</description></item></channel></rss>